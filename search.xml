<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring简介</title>
      <link href="/2020/06/11/spring/"/>
      <url>/2020/06/11/spring/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Spring的特点"><a href="#1-Spring的特点" class="headerlink" title="1. Spring的特点"></a>1. Spring的特点</h3><ol><li>轻量级</li><li>控制反转（IOC)</li><li>面向切面 (AOP)</li><li>容器<blockquote><p>简单来说，Spring是一个轻量级得到控制反转和面向切面的容器框架<br>至于IOC和AOP则是Spring的灵魂，这两点搞清楚，Spring就很容易理解了，下面我就来介绍这两个特性</p></blockquote><h4 id="AOP是什么？"><a href="#AOP是什么？" class="headerlink" title="AOP是什么？"></a>AOP是什么？</h4>AOP（Aspect-Oriented Programming，面向方面编程），可以说是OOP（Object-Oriented Programing，面向对象编程）的补充和完善。OOP引入封装、继承和多态性等概念来建立一种对象层次结构，用以模拟公共行为的一个集合。当我们需要为分散的对象引入公共行为的时候，OOP则显得无能为力。也就是说，OOP允许你定义从上到下的关系，但并不适合定义从左到右的关系。例如日志功能。日志代码往往水平地散布在所有对象层次中，而与它所散布到的对象的核心功能毫无关系。对于其他类型的代码，如安全性、异常处理和透明的持续性也是如此。这种散布在各处的无关的代码被称为横切（cross-cutting）代码，在OOP设计中，它导致了大量代码的重复，而不利于各个模块的重用。</li></ol><p>而AOP技术则恰恰相反，它利用一种称为“横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可操作性和可维护性。</p><p>使用“横切”技术，AOP把软件系统分为两个部分：核心关注点和横切关注点。业务处理的主要流程是核心关注点，与之关系不大的部分是横切关注点。</p><p>横切关注点的一个特点是，他们经常发生在核心关注点的多处，而各处都基本相似。比如权限认证、日志、事务处理。Aop 的作用在于分离系统中的各种关注点，将核心关注点和横切关注点分离开来。正如Avanade公司的高级方案构架师Adam Magee所说，AOP的核心思想就是“将应用程序中的商业逻辑同对其提供支持的通用服务进行分离。”</p><p>####IOC是什么<br>IOC是Inversion of Control的缩写，多数书籍翻译成“控制反转”。控制反转是依赖倒置原则的一种<strong>代码设计思想</strong>。具体采用的方法就是所谓的依赖注入（DI）</p><p>在Java开发中，Ioc意味着将你设计好的对象交给容器控制，而不是传统的在你的对象内部直接控制。</p><p>传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IoC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是松散耦合，这样也方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。</p><p>IoC很好的体现了面向对象设计法则之一—— 好莱坞法则：“别找我们，我们找你”；即由IoC容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。</p><p>#####DI和IOC的关系<br>DI—Dependency Injection，即“依赖注入”：是组件之间依赖关系由容器在运行期决定，形象的说，即由容器动态的将某个依赖关系注入到组件之中。依赖注入的目的并非为软件系统带来更多功能，而是为了提升组件重用的频率，并为系统搭建一个灵活、可扩展的平台。通过依赖注入机制，我们只需要通过简单的配置，而无需任何代码就可指定目标需要的资源，完成自身的业务逻辑，而不需要关心具体的资源来自何处，由谁实现。</p><p>理解DI的关键是：“谁依赖谁，为什么需要依赖，谁注入谁，注入了什么”，那我们来深入分析一下：</p><ol><li>谁依赖于谁：当然是应用程序依赖于IoC容器；</li><li>为什么需要依赖：应用程序需要IoC容器来提供对象需要的外部资源；</li><li>谁注入谁：很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象；</li><li>注入了什么：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。</li></ol><p>其实它们是同一个概念的不同角度描述，由于控制反转概念比较含糊（可能只是理解为容器控制对象这一个层面，很难让人想到谁来维护对象关系），所以2004年大师级人物Martin Fowler又给出了一个新的名字：“依赖注入”，相对IoC 而言，<strong>“依赖注入”明确描述了“被注入对象依赖IoC容器配置依赖对象”</strong>。</p><p>Spring通过DI（依赖注入）实现IOC（控制反转），常用的注入方式主要有三种：</p><ol><li>构造方法注入</li><li>setter注入</li><li>基于注解的注入</li></ol><h3 id="Spring的模块"><a href="#Spring的模块" class="headerlink" title="Spring的模块"></a>Spring的模块</h3><p>Spring框架至今已集成了20多个模块。这些模块主要被分如下图所示的核心容器、数据访问/集成,、Web、AOP（面向切面编程）、工具、消息和测试模块。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9RQ3U4NDlZVGFJTzZqaWI4WFAzcjhoOHNpYjA4MGljaWJIdnV0ZlFKWUNIV0pqQ0VTOWlickZiVzAydXRtQks0bUNsRUNEOWRGV0ppYUtQUDdtUkdqaWJJdVh3YmcvNjQw?x-oss-process=image/format,png" alt="enter image description here"></p><p>####spring 事务实现方式有哪些？</p><ol><li>编程式事务管理对基于 POJO 的应用来说是唯一选择。我们需要在代码中调用beginTransaction()、commit()、rollback()等事务管理相关的方法，这就是编程式事务管理。</li><li>基于 TransactionProxyFactoryBean 的声明式事务管理</li><li>基于 @Transactional 的声明式事务管理</li><li>基于 Aspectj AOP 配置事务</li></ol>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FirstBlog</title>
      <link href="/2020/06/09/firstblog/"/>
      <url>/2020/06/09/firstblog/</url>
      
        <content type="html"><![CDATA[<h3 id="如何将本地的代码上传到Github"><a href="#如何将本地的代码上传到Github" class="headerlink" title="如何将本地的代码上传到Github"></a>如何将本地的代码上传到Github</h3><p>  众所周知Github是全球最大的同性交友网站（代码爱好者的代码托管网站）里面存放了程序员们开源的各种项目代码，掌握好Github的使用是程序员的必备技能 ，也是在校大学生期末项目制作的助攻神器</p><p>  下面我就来简单的介绍如何使用Github</p><p>   首先你需要一个github账号，所有还没有的话先去注册吧！<a href="https://github.com/">https://github.com/</a></p><p>我们使用git需要先安装git工具，这里给出下载地址，下载后一路直接安装即可：</p><p><a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">https://git-for-windows.github.io/</a></p><blockquote><p>有条件的同学可以翻墙进去 毕竟服务器在国外 国内上比较卡</p></blockquote><hr><h5 id="1-进入Github首页，点击New-repository新建一个项目"><a href="#1-进入Github首页，点击New-repository新建一个项目" class="headerlink" title="1.进入Github首页，点击New repository新建一个项目"></a>1.进入Github首页，点击New repository新建一个项目</h5><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE2NDE1NDUyNi00MTg0NDE5OTEucG5n?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="2-填写相应的信息后点击create"><a href="#2-填写相应的信息后点击create" class="headerlink" title="2.填写相应的信息后点击create"></a>2.填写相应的信息后点击create</h4><p>Repository name: 仓库名称<br>Description(可选): 仓库描述介绍<br>Public, Private : 仓库权限（公开共享，私有或指定合作者）<br>Initialize this repository with a README: 添加一个README.md<br>gitignore: 不需要进行版本管理的仓库类型，对应生成文件.gitignore<br>license: 证书类型，对应生成文件LICENSE</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE2NTAyNTM3MC00OTQ0NDUwNi5wbmc?x-oss-process=image/format,png" alt="enter image description here"><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE2NTAyNTM3MC00OTQ0NDUwNi5wbmc?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="3-点击Clone-or-dowload会出现一个地址，copy这个地址备用"><a href="#3-点击Clone-or-dowload会出现一个地址，copy这个地址备用" class="headerlink" title="3.点击Clone or dowload会出现一个地址，copy这个地址备用"></a>3.点击Clone or dowload会出现一个地址，copy这个地址备用</h4><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE2NTEwNzMwOC00Mzk5MjYwMDYucG5n?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="4-接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git-Gui-Here-Git-Bash-Here-这里我们选择Git-Bash-Here，进入如下界面，Test-Bluetooth即为我的项目名。"><a href="#4-接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git-Gui-Here-Git-Bash-Here-这里我们选择Git-Bash-Here，进入如下界面，Test-Bluetooth即为我的项目名。" class="headerlink" title="4.接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git Gui Here,Git Bash Here,这里我们选择Git Bash Here，进入如下界面，Test_Bluetooth即为我的项目名。"></a>4.接下来就到本地操作了，首先右键你的项目，如果你之前安装git成功的话，右键会出现两个新选项，分别为Git Gui Here,Git Bash Here,这里我们选择Git Bash Here，进入如下界面，Test_Bluetooth即为我的项目名。</h4><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTA0ODMwOC0xOTQ4OTUyOTkucG5n?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="5-接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地"><a href="#5-接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地" class="headerlink" title="5..接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地"></a>5..接下来输入如下代码（关键步骤），把github上面的仓库克隆到本地</h4><p>git clone <a href="https://github.com/CKTim/BlueTooth.git（https://github.com/CKTim/BlueTooth.git替换成你之前复制的地址）">https://github.com/CKTim/BlueTooth.git（https://github.com/CKTim/BlueTooth.git替换成你之前复制的地址）</a><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTE0Mzk4MC03NDExNTIwNDIucG5n?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="6-这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名，如图我多出了个Test文件夹，我们把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下，"><a href="#6-这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名，如图我多出了个Test文件夹，我们把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下，" class="headerlink" title="6.这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名，如图我多出了个Test文件夹，我们把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下，"></a>6.这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名，如图我多出了个Test文件夹，我们把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下，</h4><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTIwOTczMC0yMDg5NDk2NDgzLnBuZw?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="7-接着输入命令cd-Test，进入Test文件夹"><a href="#7-接着输入命令cd-Test，进入Test文件夹" class="headerlink" title="7.接着输入命令cd Test，进入Test文件夹"></a>7.接着输入命令cd Test，进入Test文件夹</h4><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTQ1NDI2MS0xMDM2Mzc3Ny5wbmc?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="8-接下来依次输入以下代码即可完成其他剩余操作："><a href="#8-接下来依次输入以下代码即可完成其他剩余操作：" class="headerlink" title="8.接下来依次输入以下代码即可完成其他剩余操作："></a>8.接下来依次输入以下代码即可完成其他剩余操作：</h4><p>git add .        （注：别忘记后面的.，此操作是把Test文件夹下面的文件都添加进来）</p><p>git commit  -m  “提交信息”  （注：“提交信息”里面换成你需要，如“first commit”）</p><p>git push -u origin master   （注：此操作目的是把本地仓库push到github上面，此步骤需要你输入帐号和密码）</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTU1NzgyMy0zODYzNTEyLnBuZw?x-oss-process=image/format,png" alt="enter image description here"><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTY1MTgwOC0xMjI1MzM1MTM2LnBuZw?x-oss-process=image/format,png" alt="enter image description here"><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltYWdlczIwMTUuY25ibG9ncy5jb20vYmxvZy85MTM5MTMvMjAxNjA4LzkxMzkxMy0yMDE2MDgyMzE3MTgxODkzMy0xNTA2ODE1NTY2LnBuZw?x-oss-process=image/format,png" alt="enter image description here"></p><h4 id="9-最后去自己的Github网页刷新一下就能看见这自己刚刚上传的代码了"><a href="#9-最后去自己的Github网页刷新一下就能看见这自己刚刚上传的代码了" class="headerlink" title="9.最后去自己的Github网页刷新一下就能看见这自己刚刚上传的代码了"></a>9.最后去自己的Github网页刷新一下就能看见这自己刚刚上传的代码了</h4><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/09/hello-world/"/>
      <url>/2020/06/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
